/**
 *  @class
 *  @function CollectionTabs
 */
if (typeof CollectionTabs === 'undefined') {
	class CollectionTabs {
	  constructor() {
			const _this = this;
			let collection_tabs = document.querySelectorAll('.collection-tabs__list');

	    if ( ! collection_tabs) {
	      return;
	    }
			collection_tabs.forEach((tabs) => {
				if ( tabs.dataset.initiated ) {
					return;
				}
				const buttons = tabs.querySelectorAll('button'),
							target = tabs.dataset.target;

				tabs.dataset.initiated = true;

				buttons.forEach((button) => {
					button.addEventListener('click', (event) => {
						let handle = button.dataset.collection;
						[].forEach.call(buttons, function(el) {
		          el.classList.remove('active');
		        });
						button.classList.add('active');

						if ( handle ) {
							_this.toggleCollection(target, handle);
						}

						event.preventDefault();
					});
				});
			});

	  }
		toggleCollection(target, handle) {
			let slider = document.getElementById(target),
					slider_holder = document.getElementById(target + '-holder'),
					products = slider.querySelectorAll(`.columns:not([data-collection*="${handle}"])`),
					active_products = slider.querySelectorAll(`[data-collection*="${handle}"]`),
					flkty = Flickity.data( slider );
			[].forEach.call(products, function(el) {
				el.classList.remove('carousel__slide');
				slider.append(el);
			});
			[].forEach.call(active_products, function(el) {
				el.classList.add('carousel__slide');
			});
			flkty.insert(active_products);
			flkty.reloadCells();
			flkty.reposition();
		}
	}
	window.addEventListener('load', () => {
		new CollectionTabs();
	});
}
